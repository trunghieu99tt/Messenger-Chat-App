{"version":3,"sources":["static/images/register.jpg","firebase.js","redux/actions/channel.action.js","redux/types/index.types.js","components/Search.jsx","components/MessagesListPanel/MessageListCard.jsx","components/MessagesListPanel/MessagesListPanel.jsx","components/MessagesPanel/MessageForm.jsx","components/MessagesPanel/MessagesPanelHeader.jsx","components/MessagesPanel/Message.jsx","components/MessagesPanel/MessagesPanelMain.jsx","components/MessagesPanel/MessagesPanel.jsx","components/UserPanel/FriendCard.jsx","components/UserPanel/FriendsList.jsx","components/UserPanel/UserInfor.jsx","components/UserPanel/UserPanel.jsx","App.js","redux/actions/user.action.js","components/Form/FormInput.jsx","components/Form/SubmitButton.jsx","components/Mask/Loader.jsx","components/Mask/Mask.jsx","components/auth/Login.jsx","components/auth/Register.jsx","redux/reducers/channel.reducer.js","redux/reducers/user.reducer.js","redux/reducers/index.reducer.js","serviceWorker.js","index.js","static/images/default-avatar.png"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setCurrentChannel","channel","type","payload","currentChannel","Search","handleSearchChange","className","onSubmit","placeholder","onChange","SearchOutlined","connect","message","image","name","lastMessage","currentChatting","handleClick","onClick","src","require","alt","hasOwnProperty","content","MessagesListPanel","state","messagesRef","database","ref","usersRef","users","messages","addListeners","channelId","addMessageListener","loadedMessages","child","on","snap","key","allMessages","Object","values","val","includes","push","length","userId","setState","messagesLoading","item","props","currentUser","this","uid","nextProps","otherUsers","filter","user","map","index","avatar","find","e","Component","MessageForm","loading","errors","uploadState","uploadTask","storageRef","storage","percentUploaded","file","authorized","handleChange","event","target","value","createMessage","fileURL","newMessage","timestamp","ServerValue","TIMESTAMP","time","Date","sentBy","id","Math","random","displayName","photoUrl","sendMessage","a","preventDefault","set","console","log","getPath","uploadFile","metaData","pathToUpload","pathToUpload1","filePath","uuidv4","put","round","bytesTransferred","totalBytes","err","snapshot","getDownloadURL","then","downloadUrl","sendFileMessage","catch","fileUrl","addFile","files","sendFile","isAuthorized","contentType","mime","lookup","clearFile","fileName","htmlFor","FileImageOutlined","MessagesPanelHeader","searchLoading","color","status","isOwnMessage","isOwnImageMessage","timeFromNow","moment","fromNow","Message","Fragment","isImage","MessagesPanelMain","showMessages","updateScroll","container","document","querySelector","scrollTop","scrollHeight","searchResults","finalMessages","MessagesPanel","progressBar","numUniqueUsers","searchTerm","handleSearchMessages","channelMessages","regex","RegExp","reduce","acc","match","setTimeout","isProgressBarVisible","FriendCard","isOnline","FriendsList","usersList","userList","UserInfor","photoURL","activeToolbarItem","toolbaritemid","MessageOutlined","LogoutOutlined","UserPanel","connectedRef","presenceRef","addListener","currentUserUid","loadedUsers","saveUsers","onDisconnect","remove","addStatusToUser","connected","setUsers","updatedUsers","isUserOnline","changeChannel","channelData","getChannelId","setPrivateChannel","setActiveChannel","activeChannel","currentUserId","isLogout","toolbarId","getAttribute","querySelectorAll","forEach","classList","add","handleSignOut","auth","signOut","history","allUsers","withRouter","App","style","borderLeft","borderRight","isPrivateChannel","FormInput","label","otherProps","SubmitButton","children","Loader","Mask","login","email","password","userRef","handleSubmit","signInWithEmailAndPassword","failedAlert","successAlert","success","error","required","to","Register","username","passwordConfirm","isPasswordValid","createUserWithEmailAndPassword","createdUser","updateProfile","md5","saveUser","INITIAL_STATE","channelReducer","action","isLoading","userReducer","rootReducer","combineReducers","Boolean","window","location","hostname","store","createStore","composeWithDevTools","Root","goToLogin","setUser","clearUser","onAuthStateChanged","exact","path","component","Login","RootWithAuth","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,sC,uTCgB3CC,IAASC,cAXc,CACtBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKDT,QAAf,EChBaU,EAAoB,SAACC,GACjC,MAAO,CACNC,KCGiC,sBDFjCC,QAAS,CACRC,eAAgBH,K,SEUJI,EAdA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjB,OACC,0BAAMC,UAAU,aAAaC,SAAUF,GACtC,2BACCJ,KAAK,OACLO,YAAY,SACZF,UAAU,oBACVG,SAAUJ,IAEX,kBAACK,EAAA,EAAD,CAAgBJ,UAAU,uBCoCdK,cAAQ,KAAM,CAAEZ,qBAAhBY,EAvCS,SAAC,GAMlB,IAVUC,EAKhBC,EAKK,EALLA,MACAC,EAIK,EAJLA,KACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,gBACAC,EACK,EADLA,YAEA,OACC,yBAAKX,UAAU,qBAAqBY,QAASD,GAC5C,4BAAQX,UAAU,uCACjB,yBACCA,UAAS,UACRU,EAAkB,iBAAmB,GAD7B,sCAGTG,IACCN,GACAO,EAAQ,IAETC,IAAG,UAAKP,EAAL,cAIL,yBAAKR,UAAU,6BACd,uBAAGA,UAAU,gCAAgCQ,GAC7C,uBAAGR,UAAU,oCA3BhB,QADgBM,EA6BHG,SA5Bb,IAAOH,OAAP,EAAOA,EAASU,eAAe,UA4B1B,UACKR,EADL,8CAEgB,OAAXC,QAAW,IAAXA,OAAA,EAAAA,EAAaQ,UAAW,UC5B7BC,E,4MACLC,MAAQ,CACPC,YAAarC,EAASsC,WAAWC,IAAI,YACrCC,SAAUxC,EAASsC,WAAWC,IAAI,SAClCE,MAAO,GACPC,SAAU,I,EAaXC,aAAe,SAACC,GACf,EAAKC,mBAAmBD,I,EAGzBC,mBAAqB,SAACD,GAAe,IAC5BP,EAAgB,EAAKD,MAArBC,YAEJS,EAAiB,GACjBL,EAAQ,GACAJ,EACRU,MAAMH,GAAWI,GAAG,eAAe,SAACC,GAAU,IACzCC,EAAQD,EAARC,IACFC,EAAcC,OAAOC,OAAOJ,EAAKK,OAElCb,EAAMc,SAASL,KACnBJ,EAAeU,KAAK,CACnBd,SAAQ,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAcA,EAAYM,OAAS,GAC7CC,OAAQR,IAETT,EAAMe,KAAKN,GACX,EAAKS,SAAS,CACbjB,SAAUI,EACVL,MAAOA,EACPmB,iBAAiB,S,EAMrBhC,YAAc,SAACiC,IAEdnD,EAD8B,EAAKoD,MAA3BpD,mBACUmD,I,kEAzCE,IACZE,EAAgBC,KAAKF,MAArBC,YACRA,GAAeC,KAAKrB,aAAaoB,EAAYE,O,uDAGbC,GAAY,IACpCH,EAAgBG,EAAhBH,YACRA,GAAeC,KAAKrB,aAAaoB,EAAYE,O,+BAqCpC,IAAD,OACAE,EAAeH,KAAKF,MAApBK,WADA,EAEoBH,KAAK5B,MAAzBM,EAFA,EAEAA,SAAUD,EAFV,EAEUA,MAGlB,OACC,6BAASxB,UAAU,uBAClB,kBAAC,EAAD,MACA,yBAAKA,UAAU,6BAAf,OACEkD,QADF,IACEA,OADF,EACEA,EACEC,QAAO,SAACC,GAAD,OAAU5B,EAAMc,SAASc,EAAKJ,QACtCK,KAAI,SAACT,EAAMU,GAAW,IACdC,EAAsBX,EAAtBW,OAAQ/C,EAAcoC,EAAdpC,KAAMwC,EAAQJ,EAARI,IAGhBvC,EAAcgB,EAAS+B,MAC5B,SAACC,GAAD,OAAOA,EAAEhB,SAAWO,KAIrB,OACC,kBAAC,EAAD,CACCxC,KAAMA,GAAQ,GACdD,MAAOgD,GAAU,GACjB7C,gBAA2B,IAAV4C,EACjB7C,aAAwB,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAagB,WAAY,GACtCd,YAAa,kBAAM,EAAKA,YAAYiC,e,GA9Ebc,aA4FjBrD,eAJS,SAACc,GAAD,MAAY,CACnC2B,YAAa3B,EAAMiC,KAAKN,eAGe,CAAErD,qBAA3BY,CACda,G,6EC9FoByC,E,4MACpBxC,MAAQ,CACPb,QAAS,GACTsD,SAAS,EACTC,OAAQ,GACRC,YAAa,GACbC,WAAY,KACZC,WAAYjF,EAASkF,UAAU3C,MAC/B4C,gBAAiB,EACjBC,KAAM,KACNC,WAAY,CAAC,aAAc,c,EAG5BC,aAAe,SAACC,GAAD,OACd,EAAK5B,SAAL,eACE4B,EAAMC,OAAO/D,KAAO8D,EAAMC,OAAOC,S,EAGpCC,cAAgB,WAAsB,IAArBC,EAAoB,wDAC5BpE,EAAY,EAAKa,MAAjBb,QACA8C,EAAS,EAAKP,MAAdO,KACFuB,EAAa,CAClBC,UAAW7F,EAASsC,SAASwD,YAAYC,UACzCC,KAAM,IAAIC,KACV/D,QAASX,EACT2E,OAAQ,CACPC,IAAQ,OAAJ9B,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,MAAOmC,KAAKC,SACtB5E,MAAU,OAAJ4C,QAAI,IAAJA,OAAA,EAAAA,EAAMiC,cAAe,UAC3B9B,QAAY,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMkC,WAAY,YAU5B,OAJIZ,IACHC,EAAU,MAAYD,GAGhBC,G,EAGRY,Y,uCAAc,WAAOjB,GAAP,qBAAAkB,EAAA,yDACblB,EAAMmB,iBADO,EAGiC,EAAK5C,MAA3CzB,EAHK,EAGLA,YAAavB,EAHR,EAGQA,eAAgBuD,EAHxB,EAGwBA,MAEjB,EAAKjC,MAAjBb,QALK,wBAQZ,EAAKoC,SAAS,CAAEkB,SAAS,IARb,kBAULxC,EACJU,MAAMjC,EAAemD,KACrBlB,MAAMsB,EAAKJ,KACXT,OACAmD,IAAI,EAAKjB,iBAdA,wBAeLrD,EACJU,MAAMsB,EAAKJ,KACXlB,MAAMjC,EAAemD,KACrBT,OACAmD,IAAI,EAAKjB,iBAnBA,QAoBX,EAAK/B,SAAS,CACbkB,SAAS,EACTtD,QAAS,GACTuD,OAAQ,KAvBE,kDA0BX8B,QAAQC,IAAI,MAAZ,MACA,EAAKlD,SAAS,CACbkB,SAAS,EACTtD,QAAS,GACTuD,OAAO,GAAD,mBAAM,EAAK1C,MAAM0C,QAAjB,UA9BI,gCAkCZ,EAAKnB,SAAS,CACbmB,OAAO,GAAD,mBAAM,EAAK1C,MAAM0C,QAAjB,CAAyB,CAAEvD,QAAS,qBAnC/B,0D,wDAwCduF,QAAU,WAIT,MAAO,kB,EAGRC,WAAa,SAAC3B,EAAM4B,GAAc,IAAD,EACc,EAAKlD,MAA3ChD,EADwB,EACxBA,eAAgBuB,EADQ,EACRA,YAAagC,EADL,EACKA,KAC/B4C,EAAenG,EAAemD,IAC9BiD,EAAgB7C,EAAKJ,IACrBkD,EAAQ,UAAM,EAAKL,UAAX,YAAwBM,MAAxB,QAId,EAAKzD,SACJ,CACCoB,YAAa,YACbC,WAAY,EAAK5C,MAAM6C,WACrBlC,MAAMoE,GACNE,IAAIjC,EAAM4B,KAEb,WACC,EAAK5E,MAAM4C,WAAWhC,GACrB,iBACA,SAACC,GACA,IAAMkC,EAGD,IAFJiB,KAAKkB,MACJrE,EAAKsE,iBAAmBtE,EAAKuE,YAK/B,EAAK7D,SAAS,CAAEwB,uBAEjB,SAACsC,GACAb,QAAQC,IAAI,MAAOY,GACnB,EAAK9D,SAAS,CACbmB,OAAO,GAAD,mBAAM,EAAK1C,MAAM0C,QAAjB,CAAyB2C,IAC/B1C,YAAa,QACbC,WAAY,UAGd,WACC4B,QAAQC,IACP,iCACA,EAAKzE,MAAM4C,WAAW0C,UAGvB,EAAKtF,MAAM4C,WAAW0C,SAASnF,IAC7BoF,iBACAC,MAAK,SAACC,GACN,EAAKC,gBACJD,EACAxF,EACA4E,EACAC,MAGDa,OAAM,SAACN,GACPb,QAAQC,IAAI,MAAOY,GACnB,EAAK9D,SAAS,CACbmB,OAAO,GAAD,mBAAM,EAAK1C,MAAM0C,QAAjB,CAAyB2C,IAC/B1C,YAAa,QACbC,WAAY,iB,EASpB8C,gBAAkB,SAACE,EAASzF,EAAK0E,EAAcC,GAC9C3E,EAAIQ,MAAMkE,GACRlE,MAAMmE,GACN1D,OACAmD,IAAI,EAAKjB,cAAcsC,IACvBJ,MAAK,kBAAM,EAAKjE,SAAS,CAAEoB,YAAa,YACxCgD,OAAM,SAACN,GACPb,QAAQC,IAAI,QAASY,GACrB,EAAK9D,SAAS,CACbmB,OAAO,GAAD,mBAAM,EAAK1C,MAAM0C,QAAjB,CAAyB2C,SAGlClF,EAAIQ,MAAMmE,GACRnE,MAAMkE,GACNzD,OACAmD,IAAI,EAAKjB,cAAcsC,IACvBJ,MAAK,kBAAM,EAAKjE,SAAS,CAAEoB,YAAa,YACxCgD,OAAM,SAACN,GACPb,QAAQC,IAAI,QAASY,GACrB,EAAK9D,SAAS,CACbmB,OAAO,GAAD,mBAAM,EAAK1C,MAAM0C,QAAjB,CAAyB2C,U,EAKnCQ,QAAU,SAAC1C,GACV,IAAMH,EAAOG,EAAMC,OAAO0C,MAAM,GAChCtB,QAAQC,IAAI,OAAQzB,GAChBA,GACH,EAAKzB,SAAS,CAAEyB,SAAQ,kBAAM,EAAK+C,e,EAIrCA,SAAW,WAAO,IACT/C,EAAS,EAAKhD,MAAdgD,KAGR,GAAa,OAATA,GACC,EAAKgD,aAAahD,EAAK3D,MAAO,CACjC,IAAMuF,EAAW,CAChBqB,YAAaC,IAAKC,OAAOnD,EAAK3D,OAE/B,EAAKsF,WAAW3B,EAAM4B,GACtB,EAAKwB,c,EAKRJ,aAAe,SAACK,GAAD,OACd,EAAKrG,MAAMiD,WAAW9B,SAAS+E,IAAKC,OAAOE,K,EAE5CD,UAAY,kBAAM,EAAK7E,SAAS,CAAEyB,KAAM,Q,uDAE9B,IACD7D,EAAYyC,KAAK5B,MAAjBb,QACmByC,KAAKF,MAAxBhD,eAIR,OACC,0BAAMG,UAAU,eAAeC,SAAU8C,KAAKwC,aAC7C,2BACC5F,KAAK,OACLa,KAAK,UACLN,YAAY,4BACZF,UAAU,sBACVG,SAAU4C,KAAKsB,aACfG,MAAOlE,IAER,8BACC,2BACCmH,QAAQ,eACRzH,UAAU,4BAEV,kBAAC0H,EAAA,EAAD,OAED,2BACC/H,KAAK,OACLa,KAAK,OACL0E,GAAG,eACHlF,UAAU,qBACVG,SAAU4C,KAAKiE,gB,GA3OoBtD,a,SCFpBiE,E,uKACV,IAAD,QAC+C5E,KAAKF,MAApDnD,EADA,EACAA,QAASK,EADT,EACSA,mBADT,EAC6B6H,cAErC,OACC,6BAAS5H,UAAU,yBAClB,yBAAKA,UAAU,0BACd,yBAAKA,UAAU,YACbN,GACA,4BAAQM,UAAU,0CACjB,yBACCa,IAAG,iBAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAS6D,cAAX,QAAqB,GACxBxC,IAAG,iBAAErB,QAAF,IAAEA,OAAF,EAAEA,EAASc,YAAX,QAAmB,cACtBR,UAAU,yCAEX,gCAAYA,UAAU,gCACrB,uBAAGA,UAAU,gCACJ,OAAPN,QAAO,IAAPA,OAAA,EAAAA,EAASc,OAAQ,WAEnB,kBAAC,IAAD,CACCqH,MACqB,YAAb,OAAPnI,QAAO,IAAPA,OAAA,EAAAA,EAASoI,QACN,QACA,MAEJ9H,UAAU,iCANX,iBAQEN,QARF,IAQEA,OARF,EAQEA,EAASoI,cARX,QAQqB,cAOzB,yBAAK9H,UAAU,YACd,kBAAC,EAAD,CAAQD,mBAAoBA,W,GAnCe2D,a,kBCD3CqE,EAAe,SAACzH,EAAS8C,GAAU,IAAD,EAIvC,OAAc,OAAP9C,QAAO,IAAPA,GAAA,UAAAA,EAAS2E,cAAT,eAAiBC,OAAjB,OAAwB9B,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMJ,KAAM,gBAAkB,IAGxDgF,EAAoB,SAAC1H,EAAS8C,GAAU,IAAD,EAC5C,OAAc,OAAP9C,QAAO,IAAPA,GAAA,UAAAA,EAAS2E,cAAT,eAAiBC,OAAjB,OAAwB9B,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMJ,KAAM,OAAS,YAG/CiF,EAAc,SAACrD,GAAD,OAAesD,IAAOtD,GAAWuD,WA8CtCC,EAxCC,SAAC,GAAuB,IAAD,EAApB9H,EAAoB,EAApBA,QAAS8C,EAAW,EAAXA,KAC3B,OACC,kBAAC,IAAMiF,SAAP,KANc,SAAC/H,GAChB,OAAOA,EAAQU,eAAe,SAM3BsH,CAAQhI,GACR,yBAAKN,UAAS,kBAAa+H,EAAazH,EAAS8C,KAChD,yBACCvC,IAAG,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAASC,MACdP,UAAS,yBAAoBgI,EAC5B1H,EACA8C,IAEDrC,IAAG,iBAAKT,QAAL,IAAKA,OAAL,EAAKA,EAASC,SAElB,uBAAGP,UAAU,iBACXiI,EAAY3H,EAAQsE,aAIvB,yBAAK5E,UAAS,kBAAa+H,EAAazH,EAAS8C,KAChD,4BAAQpD,UAAU,kCACjB,yBACCA,UAAU,+BACVa,IAAG,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAS2E,cAAX,aAAE,EAAiB1B,OACtBxC,IAAI,MAIN,6BACC,kCAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAASW,UAGd,uBAAGjB,UAAU,iBACXiI,EAAY3H,EAAQsE,eCjDN2D,E,4MACpBpH,MAAQ,CACPqH,aAAc,I,EAcfC,aAAe,WACd,IAAMC,EAAYC,SAASC,cAAc,wBAErCF,GAAaA,EAAUG,WAAaH,EAAUI,eACjDJ,EAAUG,UAAYH,EAAUI,e,+EAfD7F,GAAY,IACpCxB,EAAawB,EAAbxB,SACRsB,KAAKL,SAAS,CAAE8F,aAAc/G,IAC9BsB,KAAK0F,iB,0CAKL1F,KAAK0F,iB,+BAUI,IAAD,EAC+C1F,KAAKF,MAApDC,EADA,EACAA,YAAajD,EADb,EACaA,eAAgBkJ,EAD7B,EAC6BA,cAC7BP,EAAiBzF,KAAK5B,MAAtBqH,aAIFQ,GACS,OAAbD,QAAa,IAAbA,OAAA,EAAAA,EAAevG,SAAUuG,GAAkBP,EAE7C,OACC,6BAASxI,UAAU,sBAAsBiC,IAAKkD,KAAKC,WACpC,OAAb4D,QAAa,IAAbA,OAAA,EAAAA,EAAexG,QAAS,GACxBwG,EAAc3F,KAAI,SAAC/C,GAAD,OACjB,kBAAC,EAAD,CACC2B,IAAK3B,EAAQsE,UACbtE,QAASA,EACT8C,KAAMN,EACNpD,QAASG,Y,GAxC+B6D,aCIzCuF,E,4MACL9H,MAAQ,CACPC,YAAarC,EAASsC,WAAWC,IAAI,YACrC8B,KAAM,EAAKP,MAAMC,YACjBrB,SAAU,GACVyH,aAAa,EACbvG,iBAAiB,EACjBwG,eAAgB,GAChBC,WAAY,GACZxB,eAAe,EACfmB,cAAe,I,EAchBrH,aAAe,SAACC,GACf,EAAKC,mBAAmBD,I,EAGzBC,mBAAqB,SAACD,GAAe,IAC5BmB,EAAgB,EAAKD,MAArBC,YACA1B,EAAgB,EAAKD,MAArBC,YAIJS,EAAiB,GACTT,EACRU,MAAMH,GACRG,MAAMgB,EAAYE,KAClBjB,GAAG,eAAe,SAACC,GACnBH,EAAeU,KAAKP,EAAKK,OACzB,EAAKK,SAAS,CACbjB,SAAUI,EACVc,iBAAiB,Q,EAKrB5C,mBAAqB,SAACuE,GACrBA,EAAMmB,iBACN,EAAK/C,SACJ,CACC0G,WAAY9E,EAAMC,OAAOC,MACzBoD,eAAe,IAEhB,kBAAM,EAAKyB,2B,EAIbA,qBAAuB,WACtB,IAAMC,EAAe,YAAO,EAAKnI,MAAMM,UACjC8H,EAAQ,IAAIC,OAAO,EAAKrI,MAAMiI,WAAY,MAC1CL,EAAgBO,EAAgBG,QAAO,SAACC,EAAKpJ,GAAa,IAAD,EAO9D,OALEA,GAAWA,EAAQW,SAAWX,EAAQW,QAAQ0I,MAAMJ,KAArD,OACAjJ,QADA,IACAA,GADA,UACAA,EAAS2E,cADT,aACA,EAAiBzE,KAAKmJ,MAAMJ,MAE5BG,EAAInH,KAAKjC,GAEHoJ,IACL,IACH,EAAKhH,SAAS,CAAEqG,kBAChBa,YAAW,WACV,EAAKlH,SAAS,CAAEkF,eAAe,MAC7B,M,kEA5DiB,IAAD,EACqB7E,KAAKF,MAArCC,EADW,EACXA,YAAajD,EADF,EACEA,eACrBA,GAAkBiD,GAAeC,KAAKrB,aAAa7B,EAAemD,O,uDAGlCC,GAAY,IACpCH,EAAgCG,EAAhCH,YAAajD,EAAmBoD,EAAnBpD,eAErBA,GAAkBiD,GAAeC,KAAKrB,aAAa7B,EAAemD,O,+BAuDzD,IAAD,EAQJD,KAAK5B,MANRC,EAFO,EAEPA,YAEAK,GAJO,EAGP2B,KAHO,EAIP3B,UACAsH,EALO,EAKPA,cAEAnB,GAPO,EAMPwB,WANO,EAOPxB,eAPO,EAUgC7E,KAAKF,MAArChD,EAVA,EAUAA,eAAgBiD,EAVhB,EAUgBA,YAOxB,OACC,6BAAS9C,UAAU,kBAClB,kBAAC,EAAD,CACCN,QAAO,OAAEG,QAAF,IAAEA,IAAkB,KAC3BE,mBAAoBgD,KAAKhD,mBACzB6H,cAAeA,IAEhB,kBAAC,EAAD,CACCnG,SAAUA,EACVsH,cAAeA,EACfjG,YAAaA,EACbjD,eAAgBA,IAEjB,kBAAC,EAAD,CACCuB,YAAaA,EACbvB,eAAgBA,EAChBuD,KAAMN,EACN+G,qBAAsB9G,KAAK8G,4B,GA9GJnG,aAyHbrD,eAJS,SAACc,GAAD,MAAY,CACnCtB,eAAgBsB,EAAMzB,QAAQG,kBAGhBQ,CAAyB4I,GCnGzBa,EA1BI,SAAC,GAAoD,IAAlDvJ,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAAMuJ,EAAoC,EAApCA,SAAUtH,EAA0B,EAA1BA,OAAQ9B,EAAkB,EAAlBA,YACpD,OACC,yBACCX,UAAU,cACViC,IAAG,sBAAiBQ,GACpB7B,QAASD,GAET,4BAAQX,UAAU,gCACjB,yBACCA,UAAS,2CACR+J,EAAW,iBAAmB,IAE/BlJ,IAAKN,EACLQ,IAAG,UAAKP,EAAL,cAIL,uBAAGR,UAAU,qBAAqBQ,GAElC,kBAAC,IAAD,CAAKqH,MAAOkC,EAAW,QAAU,MAAO/J,UAAU,WAChD+J,EAAW,SAAW,aClBrBC,E,4MACL7I,MAAQ,CACP8I,UAAW,I,EAGZtJ,YAAc,SAACiC,IAEdnD,EAD8B,EAAKoD,MAA3BpD,mBACUmD,I,uDAGT,IAAD,WACuCG,KAAKF,MAA5CqH,EADA,EACAA,SADA,EACUzK,kBADV,EAC6B+B,MAErC,OACC,6BAASxB,UAAU,gBAClB,4BAAQA,UAAU,wBACjB,wDAAakK,QAAb,IAAaA,OAAb,EAAaA,EAAU1H,cAAvB,QAAiC,EAAjC,OAGD,yBAAKxC,UAAU,4BACL,OAARkK,QAAQ,IAARA,OAAA,EAAAA,EAAU1H,SACV0H,EAAS7G,KAAI,SAACT,GAAU,IACfW,EAA8BX,EAA9BW,OAAQ/C,EAAsBoC,EAAtBpC,KAAMsH,EAAgBlF,EAAhBkF,OAAQ9E,EAAQJ,EAARI,IAC9B,OACC,kBAAC,EAAD,CACCzC,MAAOgD,EACP/C,KAAMA,EACNuJ,SAAqB,WAAXjC,EACVrF,OAAQO,EACRrC,YAAa,kBAAM,EAAKA,YAAYiC,e,GA7BnBc,aA2CXrD,eAJS,SAACc,GAAD,MAAY,CACnCK,MAAOL,EAAMiC,KAAK5B,SAGqB,CAAE/B,qBAA3BY,CAAgD2J,G,kBCLhDG,EAxCG,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAU/E,EAAqC,EAArCA,YAAagF,EAAwB,EAAxBA,kBAC3C,OACC,6BAASrK,UAAU,cAClB,4BAAQA,UAAU,+BACjB,yBACCA,UAAU,2CACVa,IACCuJ,GACAtJ,EAAQ,IAETC,IAAG,UAAKsE,EAAL,aAEJ,gCAAYrF,UAAU,oBACrB,2BAAIqF,KAIN,yBAAKrF,UAAU,WACd,yBACCA,UAAU,sBACVsK,cAAe,EACf1J,QAAS,SAAC0D,GAAD,OAAW+F,EAAkB/F,GAAO,KAE7C,kBAACiG,EAAA,EAAD,MACA,0BAAMvK,UAAU,sBAAhB,SAGD,yBACCA,UAAU,eACVsK,cAAe,EACf1J,QAAS,SAAC0D,GAAD,OAAW+F,EAAkB/F,GAAO,KAE7C,kBAACkG,EAAA,EAAD,MACA,0BAAMxK,UAAU,sBAAhB,cC7BCyK,E,4MACLtJ,MAAQ,CACPuJ,aAAc3L,EAASsC,WAAWC,IAAI,mBACtCqJ,YAAa5L,EAASsC,WAAWC,IAAI,YACrCE,MAAO,GACPD,SAAUxC,EAASsC,WAAWC,IAAI,U,EAWnCsJ,YAAc,SAACC,GACd,IAAIC,EAAc,GADe,EAGe,EAAK3J,MAA7CI,EAHyB,EAGzBA,SAAUmJ,EAHe,EAGfA,aAAcC,EAHC,EAGDA,YACV,EAAK9H,MAAnBkI,UAERxJ,EAASQ,GAAG,eAAe,SAACC,GAC3B,GAAI6I,IAAmB7I,EAAKC,IAAK,CAChC,IAAImB,EAAOpB,EAAKK,MAChBe,EAAI,IAAUpB,EAAKC,IACnBmB,EAAI,OAAa,UACjB0H,EAAYvI,KAAKa,GAEjB,EAAKV,SAAS,CAAElB,MAAOsJ,QAGzBJ,EAAa3I,GAAG,SAAS,SAACC,GACzB,GAAIA,EAAKK,MAAO,CACf,IAAMf,EAAMqJ,EAAY7I,MAAM+I,GAC9BvJ,EAAIoE,KAAI,GACRpE,EAAI0J,eAAeC,QAAO,SAACzE,GACd,OAARA,GACHb,QAAQC,IAAI,MAAOY,UAMvBmE,EAAY5I,GAAG,eAAe,SAACC,GAC1B6I,IAAmB7I,EAAKC,KAC3B,EAAKiJ,gBAAgBlJ,EAAKC,QAI5B0I,EAAY5I,GAAG,iBAAiB,SAACC,GAC5B6I,IAAmB7I,EAAKC,KAC3B,EAAKiJ,gBAAgBlJ,EAAKC,KAAK,O,EAKlCiJ,gBAAkB,SAACzI,GAA8B,IAAtB0I,IAAqB,yDACvC3J,EAAU,EAAKL,MAAfK,MACA4J,EAAa,EAAKvI,MAAlBuI,SAEFC,EAAe7J,EAAMiI,QAAO,SAACC,EAAKtG,GAIvC,OAHIA,EAAKJ,MAAQP,IAChBW,EAAI,OAAJ,UAAoB+H,EAAY,SAAW,YAEtC,GAAN,mBAAWzB,GAAX,CAAgBtG,MACd,IAEqB,oBAAbgI,GACVA,EAASC,I,EAIXC,aAAe,SAAClI,GAAD,MAA0B,WAAhBA,EAAK0E,Q,EAE9ByD,cAAgB,SAACnI,GAChB,IACMoI,EAAc,CACnBtG,GAFiB,EAAKuG,aAAarI,EAAKJ,KAGxCxC,KAAM4C,EAAK5C,MAEZ,EAAKqC,MAAMpD,kBAAkB+L,GAC7B,EAAK3I,MAAM6I,mBAAkB,GAC7B,EAAKC,iBAAiBvI,EAAKJ,M,EAG5B2I,iBAAmB,SAAClJ,GACnB,EAAKC,SAAS,CAAEkJ,cAAenJ,K,EAGhCgJ,aAAe,SAAChJ,GACf,IAAMoJ,EAAgB,EAAK1K,MAAMiC,KAAKJ,IACtC,OAAOP,EAASoJ,EAAT,UACDpJ,EADC,YACSoJ,GADT,UAEDA,EAFC,YAEgBpJ,I,EAGxB4H,kBAAoB,SAAC/F,EAAOwH,GAAc,IAAD,IAClCC,EAAS,iBAAGzH,QAAH,IAAGA,GAAH,UAAGA,EAAOC,cAAV,aAAG,EAAeyH,aAAa,wBAA/B,QAAmD,EAC7CrD,SAASsD,iBAAiB,iBAClCC,SAAQ,SAACtJ,IACb,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAMoJ,aAAa,oBACnBD,EACVnJ,EAAKuJ,UAAUC,IAAI,UAEnBxJ,EAAKuJ,UAAUlB,OAAO,aAIpBa,GACH,EAAKO,iB,EAIPA,cAAgB,kBACftN,EACEuN,OACAC,UACA5F,MAAK,kBAAMhB,QAAQC,IAAI,mB,kEA9GL,IACZ9C,EAAgBC,KAAKF,MAArBC,YACHA,GAAaC,KAAKF,MAAM2J,QAAQjK,KAAK,UACtCO,GACHC,KAAK6H,YAAY9H,EAAYE,O,+BA4GrB,IAAD,EACqCD,KAAKF,MAA1CC,EADA,EACAA,YAAa0J,EADb,EACaA,QADb,KACsBtJ,WACFH,KAAK5B,OAAfK,GAFV,EAEAiL,SAFA,EAEUjL,OAOlB,GAAKsB,EAEE,CAAC,IACCuC,EAA0BvC,EAA1BuC,YAAa+E,EAAatH,EAAbsH,SAIrB,OACC,kBAAC,IAAM/B,SAAP,KACC,kBAAC,EAAD,CACC+B,SAAUA,EACV/E,YAAaA,EACbgF,kBAAmBtH,KAAKsH,oBAEzB,kBAAC,EAAD,CAAaH,SAAU1I,EAAOS,IAAKkD,KAAKC,YAK3C,OAlBCoH,EAAQjK,KAAK,UAkBP,S,GApJemB,aA6JTgJ,eAAWrM,aALF,SAACc,GAAD,MAAY,CACnC2B,YAAa3B,EAAMiC,KAAKN,YACxBtB,MAAOL,EAAMiC,KAAK5B,SAGOnB,CAAyBoK,IC5J7CkC,G,4MACLxL,MAAQ,CACPI,SAAUxC,EAASsC,WAAWC,IAAI,SAClCoJ,aAAc3L,EAASsC,WAAWC,IAAI,mBACtCqJ,YAAa5L,EAASsC,WAAWC,IAAI,YACrCE,MAAO,I,EAURoJ,YAAc,SAACC,GACd,IAAIC,EAAc,GADe,EAGe,EAAK3J,MAA7CI,EAHyB,EAGzBA,SAAUmJ,EAHe,EAGfA,aAAcC,EAHC,EAGDA,YACxBI,EAAc,EAAKlI,MAAnBkI,UAERxJ,EAASQ,GAAG,eAAe,SAACC,GAC3B,GAAI6I,IAAmB7I,EAAKC,IAAK,CAChC,IAAImB,EAAOpB,EAAKK,MAChBe,EAAI,IAAUpB,EAAKC,IACnBmB,EAAI,OAAa,UACjB0H,EAAYvI,KAAKa,GAEjB,EAAKV,SAAS,CAAElB,MAAOsJ,IACvBC,EAAUD,OAGZJ,EAAa3I,GAAG,SAAS,SAACC,GACzB,GAAIA,EAAKK,MAAO,CACf,IAAMf,EAAMqJ,EAAY7I,MAAM+I,GAC9BvJ,EAAIoE,KAAI,GACRpE,EAAI0J,eAAeC,QAAO,SAACzE,GACd,OAARA,GACHb,QAAQC,IAAI,MAAOY,UAMvBmE,EAAY5I,GAAG,eAAe,SAACC,GAC1B6I,IAAmB7I,EAAKC,KAC3B,EAAKiJ,gBAAgBlJ,EAAKC,QAI5B0I,EAAY5I,GAAG,iBAAiB,SAACC,GAC5B6I,IAAmB7I,EAAKC,KAC3B,EAAKiJ,gBAAgBlJ,EAAKC,KAAK,O,EAKlCiJ,gBAAkB,SAACzI,GAA8B,IAAtB0I,IAAqB,yDACvC3J,EAAU,EAAKL,MAAfK,MACA4J,EAAa,EAAKvI,MAAlBuI,SAEFC,EAAe7J,EAAMiI,QAAO,SAACC,EAAKtG,GAIvC,OAHIA,EAAKJ,MAAQP,IAChBW,EAAI,OAAJ,UAAoB+H,EAAY,SAAW,YAEtC,GAAN,mBAAWzB,GAAX,CAAgBtG,MACd,IAEqB,oBAAbgI,GACVA,EAASC,I,EAIXC,aAAe,SAAClI,GAAD,MAA0B,WAAhBA,EAAK0E,Q,EAE9ByD,cAAgB,SAACnI,GAChB,IACMoI,EAAc,CACnBtG,GAFiB,EAAKuG,aAAarI,EAAKJ,KAGxCxC,KAAM4C,EAAK5C,MAEZ,EAAKqC,MAAMpD,kBAAkB+L,GAC7B,EAAK3I,MAAM6I,mBAAkB,GAC7B,EAAKC,iBAAiBvI,EAAKJ,M,EAG5B2I,iBAAmB,SAAClJ,GACnB,EAAKC,SAAS,CAAEkJ,cAAenJ,K,EAGhCgJ,aAAe,SAAChJ,GACf,IAAMoJ,EAAgB,EAAK1K,MAAMiC,KAAKJ,IACtC,OAAOP,EAASoJ,EAAT,UACDpJ,EADC,YACSoJ,GADT,UAEDA,EAFC,YAEgBpJ,I,kEAtFH,IACZK,EAAgBC,KAAKF,MAArBC,YACJA,GACHC,KAAK6H,YAAY9H,EAAYE,O,+BAsFrB,IAAD,EACgCD,KAAKF,MAArCC,EADA,EACAA,YAAajD,EADb,EACaA,eACb2B,EAAUuB,KAAK5B,MAAfK,MAER,OACC,kBAAC,IAAM6G,SAAP,KACC,yBAAKrI,UAAU,WACd,yBAAKA,UAAU,YACd,kBAAC,GAAD,CACC8C,YAAaA,EACbI,WAAY1B,KAId,yBACCxB,UAAU,WACV4M,MAAO,CACNC,WAAY,oBACZC,YAAa,sBAGd,kBAAC,EAAD,CACC1J,KAAMN,EACNI,WAAY1B,KAId,yBAAKxB,UAAU,YACd,kBAAC,EAAD,CACCH,eAAgBA,EAChBiD,YAAaA,W,GA/HFY,aA8IHrD,gBANS,SAACc,GAAD,MAAY,CACnC2B,YAAa3B,EAAMiC,KAAKN,YACxBjD,eAAgBsB,EAAMzB,QAAQG,eAC9BkN,iBAAkB5L,EAAMzB,QAAQqN,oBAGO,CAAEhC,UCrIjB,SAACvJ,GACzB,MAAO,CACN7B,KdfwB,acgBxBC,QAAS,CACR4B,YDiIYnB,CAAwCsM,I,4BErIxCK,GAfG,SAAC,GAAD,IAAG3I,EAAH,EAAGA,aAAc4I,EAAjB,EAAiBA,MAAUC,EAA3B,gDACjB,yBAAKlN,UAAU,SACd,yCAAOA,UAAU,aAAaG,SAAUkE,GAAkB6I,IACzDD,EACA,2BACCjN,UAAS,UACRkN,EAAW1I,MAAMhC,OAAS,SAAW,GAD7B,sBAIRyK,GAEC,OCLSE,GANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaF,EAAhB,oCACpB,0CAAQlN,UAAU,aAAgBkN,GAChCE,ICOYC,GATA,WACd,OACC,yBAAKrN,UAAU,iBACd,8BACA,gCCKYsN,GARF,WACZ,OACC,yBAAKtN,UAAU,QACd,kBAAC,GAAD,QCEkBuN,G,4MACpBpM,MAAQ,CACPqM,MAAO,GACPC,SAAU,GACV7J,SAAS,EACT8J,QAAS3O,EAASsC,WAAWC,IAAI,U,EAGlC+C,aAAe,SAACC,GACf,EAAK5B,SAAL,eACE4B,EAAMC,OAAO/D,KAAO8D,EAAMC,OAAOC,S,EAIpCmJ,a,uCAAe,WAAOrJ,GAAP,mBAAAkB,EAAA,6DACdlB,EAAMmB,iBADQ,EAGc,EAAKtE,MAAzBqM,EAHM,EAGNA,MAAOC,EAHD,EAGCA,SAEf,EAAK/K,SAAS,CAAEkB,SAAS,IALX,kBAQY7E,EACvBuN,OACAsB,2BAA2BJ,EAAOC,GAVvB,cAWb,EAAK/K,SAAS,CAAEkB,SAAS,IAXZ,kDAab,EAAKiK,YAAY,KAAIvN,SACrB,EAAKoC,SAAS,CAAEkB,SAAS,IAdZ,0D,wDAkBfkK,aAAe,kBAAMxN,KAAQyN,QAAQ,8B,EAErCF,YAAc,SAACrH,GAAD,OAASlG,KAAQ0N,MAAMxH,I,uDAE3B,IAAD,EAC6BzD,KAAK5B,MAAlCqM,EADA,EACAA,MAAOC,EADP,EACOA,SAAU7J,EADjB,EACiBA,QAIzB,OACC,kBAAC,IAAMyE,SAAP,KACC,6BAASrI,UAAU,SAClB,yBAAKA,UAAU,aACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,kCACd,yBAAKA,UAAU,iBAAf,SAEA,0BACCC,SAAU8C,KAAK4K,aACf3N,UAAU,eAEV,kBAAC,GAAD,CACCQ,KAAK,QACLb,KAAK,QACL0E,aAActB,KAAKsB,aACnBG,MAAOgJ,EACPP,MAAM,QACNgB,UAAQ,IAET,kBAAC,GAAD,CACCzN,KAAK,WACLb,KAAK,WACL0E,aAActB,KAAKsB,aACnBG,MAAOiJ,EACPR,MAAM,WACNgB,UAAQ,IAET,kBAAC,GAAD,CACCtO,KAAK,SACLM,SAAU8C,KAAK4K,cAFhB,WAOA,0BAAM3N,UAAU,kBAAhB,0BACyB,IACxB,kBAAC,IAAD,CAAMkO,GAAG,aAAT,eAIH,yBAAKlO,UAAU,kCACd,yBACCa,IAAKC,EAAQ,KACbC,IAAI,GACJf,UAAU,2BAKb4D,EAAU,kBAAC,GAAD,MAAW,W,GA3FQF,a,qBCCdyK,G,4MACpBhN,MAAQ,CACPiN,SAAU,GACVZ,MAAO,GACPC,SAAU,GACVY,gBAAiB,GACjBzK,SAAS,EACT8J,QAAS3O,EAASsC,WAAWC,IAAI,U,EAGlC+C,aAAe,SAACC,GACf,EAAK5B,SAAL,eACE4B,EAAMC,OAAO/D,KAAO8D,EAAMC,OAAOC,S,EAIpC8J,gBAAkB,qBAAGb,WAAH,EAAaY,iB,EAG/BV,a,uCAAe,WAAOrJ,GAAP,uBAAAkB,EAAA,yDACdlB,EAAMmB,kBAEF,EAAK6I,gBAAgB,EAAKnN,OAHhB,0BAIyB,EAAKA,MAAnCqM,EAJK,EAILA,MAAOC,EAJF,EAIEA,SAAUW,EAJZ,EAIYA,SAEzB,EAAK1L,SAAS,CAAEkB,SAAS,IANZ,kBASc7E,EACxBuN,OACAiC,+BAA+Bf,EAAOC,GAX5B,cASNe,EATM,iBAaNA,EAAYpL,KAAKqL,cAAc,CACpCpJ,YAAa+I,EACbhE,SAAS,+BAAD,OAAiCsE,KACxCF,EAAYpL,KAAKoK,OADV,kBAfG,yBAoBN,EAAKmB,SAASH,GApBR,QAqBZ,EAAKV,eACL,EAAKpL,SAAS,CAAEkB,SAAS,IAtBb,kDAwBZ+B,QAAQC,IAAI,MAAZ,MACA,EAAKiI,YAAY,KAAIvN,SACrB,EAAKoC,SAAS,CAAEkB,SAAS,IA1Bb,0D,wDA+BfkK,aAAe,kBAAMxN,KAAQyN,QAAQ,8B,EAErCF,YAAc,SAACrH,GAAD,OAASlG,KAAQ0N,MAAMxH,I,EAErCmI,SAAW,SAACH,GAEX,OADoB,EAAKrN,MAAjBuM,QACO5L,MAAM0M,EAAYpL,KAAKJ,KAAK0C,IAAI,CAC9ClF,KAAMgO,EAAYpL,KAAKiC,YACvB9B,OAAQiL,EAAYpL,KAAKgH,Y,uDAIjB,IAAD,EAOJrH,KAAK5B,MALRiN,EAFO,EAEPA,SACAZ,EAHO,EAGPA,MACAC,EAJO,EAIPA,SACAY,EALO,EAKPA,gBACAzK,EANO,EAMPA,QAGD,OACC,kBAAC,IAAMyE,SAAP,KACC,6BAASrI,UAAU,YAClB,yBAAKA,UAAU,aACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,qCACd,yBAAKA,UAAU,iBAAf,iBAIA,0BACCC,SAAU8C,KAAK4K,aACf3N,UAAU,kBAEV,kBAAC,GAAD,CACCQ,KAAK,WACLb,KAAK,OACL0E,aAActB,KAAKsB,aACnBG,MAAO4J,EACPnB,MAAM,WACNgB,UAAQ,IAET,kBAAC,GAAD,CACCzN,KAAK,QACLb,KAAK,QACL0E,aAActB,KAAKsB,aACnBG,MAAOgJ,EACPP,MAAM,QACNgB,UAAQ,IAET,kBAAC,GAAD,CACCzN,KAAK,WACLb,KAAK,WACL0E,aAActB,KAAKsB,aACnBG,MAAOiJ,EACPR,MAAM,WACNgB,UAAQ,IAET,kBAAC,GAAD,CACCzN,KAAK,kBACLb,KAAK,WACL0E,aAActB,KAAKsB,aACnBG,MAAO6J,EACPpB,MAAM,mBACNgB,UAAQ,IAGT,kBAAC,GAAD,CACCtO,KAAK,SACLM,SAAU8C,KAAK4K,cAFhB,iBAOA,0BAAM3N,UAAU,kBAAhB,2BAC0B,IACzB,kBAAC,IAAD,CAAMkO,GAAG,UAAT,YAIH,yBAAKlO,UAAU,kCACd,yBACCa,IAAKC,EAAQ,KACbC,IAAI,GACJf,UAAU,8BAKb4D,EAAU,kBAAC,GAAD,MAAW,W,GA5IWF,a,kBCPhCkL,GAAgB,CACrB/O,eAAgB,KAChBkN,kBAAkB,GAoBJ8B,GAjBQ,WAAoC,IAAnC1N,EAAkC,uDAA1ByN,GAAeE,EAAW,uCACzD,OAAQA,EAAOnP,MACd,IrBFiC,sBqBGhC,OAAO,gBACHwB,EADJ,CAECtB,eAAgBiP,EAAOlP,QAAQC,iBAEjC,IrBNiC,sBqBOhC,OAAO,gBACHsB,EADJ,CAEC4L,iBAAkB+B,EAAOlP,QAAQmN,mBAEnC,QACC,OAAO5L,IClBJyN,GAAgB,CACrBpN,MAAO,GACPsB,YAAa,KACbiM,WAAW,GA2BGC,GAxBK,WAAoC,IAAnC7N,EAAkC,uDAA1ByN,GAAeE,EAAW,uCACtD,OAAQA,EAAOnP,MACd,ItBRsB,WsBSrB,OAAO,gBACHwB,EADJ,CAEC2B,YAAagM,EAAOlP,QAAQkD,YAC5BiM,WAAW,IAEb,ItBbwB,asBcvB,OAAO,gBACH5N,EADJ,CAEC2B,YAAa,KACbiM,WAAW,IAEb,ItBlBwB,asBmBvB,OAAO,gBACH5N,EADJ,CAECK,MAAOsN,EAAOlP,QAAQ4B,QAExB,QACC,OAAOL,ICnBK8N,GALKC,0BAAgB,CACnC9L,KAAM4L,GACNtP,QAASmP,KCMUM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3F,MACvB,2D,WCQA4F,GAAQC,sBAAYP,GAAaQ,iCAEjCC,G,4MAmBLC,UAAY,kBAAM,kBAAC,IAAD,CAAUzB,GAAG,Y,kEAlBV,IAAD,SACYnL,KAAKF,MAA5B+M,EADW,EACXA,QAASC,EADE,EACFA,UAEjB9Q,EAASuN,OAAOwD,oBAAmB,SAAC1M,GAG/BA,GACHwM,EAAQxM,GACR,EAAKP,MAAM2J,QAAQjK,KAAK,OAGxBsN,IACA,EAAKF,YACL,EAAK9M,MAAM2J,QAAQjK,KAAK,gB,+BAU1B,OAFsBQ,KAAKF,MAAnBkM,UAGP,kBAAC,GAAD,MAEA,kBAAC,IAAD,KACC,kBAAC,IAAD,eAAOgB,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IAAS5J,KAAKF,QAC/C,kBAAC,IAAD,CAAOkN,OAAK,EAACC,KAAK,YAAYC,UAAW9B,KACzC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,SAASC,UAAWC,U,GA9BvBxM,aAwCbyM,GAAezD,YACpBrM,aALuB,SAACc,GAAD,MAAY,CACnC4N,UAAW5N,EAAMiC,KAAK2L,aAIG,CAAEa,QXnEL,SAACxM,GACvB,MAAO,CACNzD,KdFsB,WcGtBC,QAAS,CACRkD,YAAaM,KW+DqByM,UX1DZ,WACxB,MAAO,CACNlQ,KdVwB,gByBkEzBU,CAAiDqP,KAGlDU,IAASC,OACR,kBAAC,IAAD,CAAUd,MAAOA,IAChB,kBAAC,IAAD,KACC,kBAACY,GAAD,QAGFxH,SAAS2H,eAAe,SDqDnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9J,MAAK,SAAA+J,GACJA,EAAaC,gBAEd7J,OAAM,SAAAkH,GACLrI,QAAQqI,MAAMA,EAAM1N,a,mBEzI5BzB,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.5f6d563a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/register.98d17d5f.jpg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyAjaWoFEJ49khltVojcuEjgTSHXrMODptI\",\r\n\tauthDomain: \"messenger-app-9e350.firebaseapp.com\",\r\n\tdatabaseURL: \"https://messenger-app-9e350.firebaseio.com\",\r\n\tprojectId: \"messenger-app-9e350\",\r\n\tstorageBucket: \"messenger-app-9e350.appspot.com\",\r\n\tmessagingSenderId: \"820968672244\",\r\n\tappId: \"1:820968672244:web:3646985195957ad99e07a1\",\r\n\tmeasurementId: \"G-XHFW33K765\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import * as actionTypes from \"../types/index.types\";\r\n\r\nexport const setCurrentChannel = (channel) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SET_CURRENT_CHANNEL,\r\n\t\tpayload: {\r\n\t\t\tcurrentChannel: channel,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const setPrivateChannel = (isPrivateChannel) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SET_PRIVATE_CHANNEL,\r\n\t\tpayload: {\r\n\t\t\tisPrivateChannel,\r\n\t\t},\r\n\t};\r\n};\r\n","// user action types\r\n\r\nexport const SET_USER = \"SET_USER\";\r\nexport const CLEAR_USER = \"CLEAR_USER\";\r\nexport const SAVE_USERS = \"SAVE_USERS\";\r\n\r\n// channel action types\r\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\r\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\r\n","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nconst Search = ({ handleSearchChange }) => {\r\n\treturn (\r\n\t\t<form className=\"search-bar\" onSubmit={handleSearchChange}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\tclassName=\"search-bar__input\"\r\n\t\t\t\tonChange={handleSearchChange}\r\n\t\t\t/>\r\n\t\t\t<SearchOutlined className=\"search-bar__icon\" />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel } from \"../../redux/actions/channel.action\";\r\n\r\nconst isImage = (message) => {\r\n\treturn message?.hasOwnProperty(\"image\");\r\n};\r\n\r\nconst MessageListCard = ({\r\n\timage,\r\n\tname,\r\n\tlastMessage,\r\n\tcurrentChatting,\r\n\thandleClick,\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"messages-list-card\" onClick={handleClick}>\r\n\t\t\t<figure className=\"messages-list-card__image-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\tcurrentChatting ? \"image-outlined\" : \"\"\r\n\t\t\t\t\t} rounded messages-list-card__image`}\r\n\t\t\t\t\tsrc={\r\n\t\t\t\t\t\timage ||\r\n\t\t\t\t\t\trequire(\"../../static/images/default-avatar.png\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\talt={`${name} avatar`}\r\n\t\t\t\t/>\r\n\t\t\t</figure>\r\n\r\n\t\t\t<div className=\"messages-list-card__infor\">\r\n\t\t\t\t<p className=\"messages-list-card__username\">{name}</p>\r\n\t\t\t\t<p className=\"messages-list-card__lastMessage\">\r\n\t\t\t\t\t{isImage(lastMessage)\r\n\t\t\t\t\t\t? `${name} đã gửi 1 ảnh`\r\n\t\t\t\t\t\t: `${lastMessage?.content || \"\"}`}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <div className=\"ml-auto\">\r\n\t\t\t\t<Badge count={5} />\r\n\t\t\t\t<p>Time</p>\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(null, { setCurrentChannel })(MessageListCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../../firebase\";\r\nimport { setCurrentChannel } from \"../../redux/actions/channel.action\";\r\nimport Search from \"../Search\";\r\nimport MessageListCard from \"./MessageListCard\";\r\n\r\nclass MessagesListPanel extends Component {\r\n\tstate = {\r\n\t\tmessagesRef: firebase.database().ref(\"messages\"),\r\n\t\tusersRef: firebase.database().ref(\"users\"),\r\n\t\tusers: [],\r\n\t\tmessages: [],\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { currentUser } = this.props;\r\n\t\tcurrentUser && this.addListeners(currentUser.uid);\r\n\t}\r\n\r\n\tUNSAFE_componentWillReceiveProps(nextProps) {\r\n\t\tconst { currentUser } = nextProps;\r\n\t\tcurrentUser && this.addListeners(currentUser.uid);\r\n\t}\r\n\r\n\taddListeners = (channelId) => {\r\n\t\tthis.addMessageListener(channelId);\r\n\t};\r\n\r\n\taddMessageListener = (channelId) => {\r\n\t\tconst { messagesRef } = this.state;\r\n\t\t// console.log(\"channelId\", channelId);\r\n\t\tlet loadedMessages = [];\r\n\t\tlet users = [];\r\n\t\tconst ref = messagesRef;\r\n\t\tref.child(channelId).on(\"child_added\", (snap) => {\r\n\t\t\tconst { key } = snap;\r\n\t\t\tconst allMessages = Object.values(snap.val());\r\n\r\n\t\t\tif (!users.includes(key)) {\r\n\t\t\t\tloadedMessages.push({\r\n\t\t\t\t\tmessages: allMessages?.[allMessages.length - 1],\r\n\t\t\t\t\tuserId: key,\r\n\t\t\t\t});\r\n\t\t\t\tusers.push(key);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmessages: loadedMessages,\r\n\t\t\t\t\tusers: users,\r\n\t\t\t\t\tmessagesLoading: false,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\thandleClick = (item) => {\r\n\t\tconst { setCurrentChannel } = this.props;\r\n\t\tsetCurrentChannel(item);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { otherUsers } = this.props;\r\n\t\tconst { messages, users } = this.state;\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"messages-list-panel\">\r\n\t\t\t\t<Search />\r\n\t\t\t\t<div className=\"messages-list-panel__main\">\r\n\t\t\t\t\t{otherUsers\r\n\t\t\t\t\t\t?.filter((user) => users.includes(user.uid))\r\n\t\t\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\t\t\tconst { avatar, name, uid } = item;\r\n\t\t\t\t\t\t\t// console.log(\"item\", item);\r\n\r\n\t\t\t\t\t\t\tconst lastMessage = messages.find(\r\n\t\t\t\t\t\t\t\t(e) => e.userId === uid\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t// console.log(\"lastMessage\", lastMessage);\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<MessageListCard\r\n\t\t\t\t\t\t\t\t\tname={name || \"\"}\r\n\t\t\t\t\t\t\t\t\timage={avatar || \"\"}\r\n\t\t\t\t\t\t\t\t\tcurrentChatting={index === 0}\r\n\t\t\t\t\t\t\t\t\tlastMessage={lastMessage?.messages || \"\"}\r\n\t\t\t\t\t\t\t\t\thandleClick={() => this.handleClick(item)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentUser: state.user.currentUser,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCurrentChannel })(\r\n\tMessagesListPanel\r\n);\r\n","import { FileImageOutlined } from \"@ant-design/icons\";\r\nimport mime from \"mime-types\";\r\nimport React, { Component } from \"react\";\r\nimport uuidv4 from \"uuid/v4\";\r\nimport firebase from \"../../firebase\";\r\n\r\nexport default class MessageForm extends Component {\r\n\tstate = {\r\n\t\tmessage: \"\",\r\n\t\tloading: false,\r\n\t\terrors: [],\r\n\t\tuploadState: \"\",\r\n\t\tuploadTask: null,\r\n\t\tstorageRef: firebase.storage().ref(),\r\n\t\tpercentUploaded: 0,\r\n\t\tfile: null,\r\n\t\tauthorized: [\"image/jpeg\", \"image/png\"],\r\n\t};\r\n\r\n\thandleChange = (event) =>\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\r\n\tcreateMessage = (fileURL = false) => {\r\n\t\tconst { message } = this.state;\r\n\t\tconst { user } = this.props;\r\n\t\tconst newMessage = {\r\n\t\t\ttimestamp: firebase.database.ServerValue.TIMESTAMP,\r\n\t\t\ttime: new Date(),\r\n\t\t\tcontent: message,\r\n\t\t\tsentBy: {\r\n\t\t\t\tid: user?.uid || Math.random(),\r\n\t\t\t\tname: user?.displayName || \"Unknown\",\r\n\t\t\t\tavatar: user?.photoUrl || \"Unknown\",\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t// console.log(\"newMessage\", newMessage);\r\n\r\n\t\tif (fileURL) {\r\n\t\t\tnewMessage[\"image\"] = fileURL;\r\n\t\t}\r\n\r\n\t\treturn newMessage;\r\n\t};\r\n\r\n\tsendMessage = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { messagesRef, currentChannel, user } = this.props;\r\n\r\n\t\tconst { message } = this.state;\r\n\r\n\t\tif (message) {\r\n\t\t\tthis.setState({ loading: true });\r\n\t\t\ttry {\r\n\t\t\t\tawait messagesRef\r\n\t\t\t\t\t.child(currentChannel.uid)\r\n\t\t\t\t\t.child(user.uid)\r\n\t\t\t\t\t.push()\r\n\t\t\t\t\t.set(this.createMessage());\r\n\t\t\t\tawait messagesRef\r\n\t\t\t\t\t.child(user.uid)\r\n\t\t\t\t\t.child(currentChannel.uid)\r\n\t\t\t\t\t.push()\r\n\t\t\t\t\t.set(this.createMessage());\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tmessage: \"\",\r\n\t\t\t\t\terrors: [],\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(\"err\", err);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tmessage: \"\",\r\n\t\t\t\t\terrors: [...this.state.errors, err],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: [...this.state.errors, { message: \"Add a message\" }],\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tgetPath = () => {\r\n\t\t// if (this.props.isPrivateChannel) {\r\n\t\t// \treturn `chat/private-${this.state.channel.id}`;\r\n\t\t// }\r\n\t\treturn \"messages/users\";\r\n\t};\r\n\r\n\tuploadFile = (file, metaData) => {\r\n\t\tconst { currentChannel, messagesRef, user } = this.props;\r\n\t\tconst pathToUpload = currentChannel.uid;\r\n\t\tconst pathToUpload1 = user.uid;\r\n\t\tconst filePath = `${this.getPath()}/${uuidv4()}.jpg`;\r\n\r\n\t\t// console.log(\"this.state.storageRef\", this.state.storageRef);\r\n\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tuploadState: \"uploading\",\r\n\t\t\t\tuploadTask: this.state.storageRef\r\n\t\t\t\t\t.child(filePath)\r\n\t\t\t\t\t.put(file, metaData),\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.state.uploadTask.on(\r\n\t\t\t\t\t\"state_changed\",\r\n\t\t\t\t\t(snap) => {\r\n\t\t\t\t\t\tconst percentUploaded =\r\n\t\t\t\t\t\t\tMath.round(\r\n\t\t\t\t\t\t\t\tsnap.bytesTransferred / snap.totalBytes\r\n\t\t\t\t\t\t\t) * 100;\r\n\r\n\t\t\t\t\t\t// console.log(\"percentUploaded\", percentUploaded);\r\n\t\t\t\t\t\t// this.props.isProgressBarVisible(percentUploaded);\r\n\t\t\t\t\t\tthis.setState({ percentUploaded });\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\tconsole.log(\"err\", err);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\terrors: [...this.state.errors, err],\r\n\t\t\t\t\t\t\tuploadState: \"error\",\r\n\t\t\t\t\t\t\tuploadTask: null,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\"this.state.uploadTask.snapshot\",\r\n\t\t\t\t\t\t\tthis.state.uploadTask.snapshot\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tthis.state.uploadTask.snapshot.ref\r\n\t\t\t\t\t\t\t.getDownloadURL()\r\n\t\t\t\t\t\t\t.then((downloadUrl) => {\r\n\t\t\t\t\t\t\t\tthis.sendFileMessage(\r\n\t\t\t\t\t\t\t\t\tdownloadUrl,\r\n\t\t\t\t\t\t\t\t\tmessagesRef,\r\n\t\t\t\t\t\t\t\t\tpathToUpload,\r\n\t\t\t\t\t\t\t\t\tpathToUpload1\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"err\", err);\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\terrors: [...this.state.errors, err],\r\n\t\t\t\t\t\t\t\t\tuploadState: \"error\",\r\n\t\t\t\t\t\t\t\t\tuploadTask: null,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tsendFileMessage = (fileUrl, ref, pathToUpload, pathToUpload1) => {\r\n\t\tref.child(pathToUpload)\r\n\t\t\t.child(pathToUpload1)\r\n\t\t\t.push()\r\n\t\t\t.set(this.createMessage(fileUrl))\r\n\t\t\t.then(() => this.setState({ uploadState: \"done\" }))\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(\"err: \", err);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrors: [...this.state.errors, err],\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\tref.child(pathToUpload1)\r\n\t\t\t.child(pathToUpload)\r\n\t\t\t.push()\r\n\t\t\t.set(this.createMessage(fileUrl))\r\n\t\t\t.then(() => this.setState({ uploadState: \"done\" }))\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(\"err: \", err);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrors: [...this.state.errors, err],\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\taddFile = (event) => {\r\n\t\tconst file = event.target.files[0];\r\n\t\tconsole.log(\"file\", file);\r\n\t\tif (file) {\r\n\t\t\tthis.setState({ file }, () => this.sendFile());\r\n\t\t}\r\n\t};\r\n\r\n\tsendFile = () => {\r\n\t\tconst { file } = this.state;\r\n\t\t// console.log(\"MessageForm -> sendFile -> file\", file);\r\n\r\n\t\tif (file !== null) {\r\n\t\t\tif (this.isAuthorized(file.name)) {\r\n\t\t\t\tconst metaData = {\r\n\t\t\t\t\tcontentType: mime.lookup(file.name),\r\n\t\t\t\t};\r\n\t\t\t\tthis.uploadFile(file, metaData);\r\n\t\t\t\tthis.clearFile();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tisAuthorized = (fileName) =>\r\n\t\tthis.state.authorized.includes(mime.lookup(fileName));\r\n\r\n\tclearFile = () => this.setState({ file: null });\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state;\r\n\t\tconst { currentChannel } = this.props;\r\n\r\n\t\t// console.log(\"currentChannel\", currentChannel);\r\n\r\n\t\treturn (\r\n\t\t\t<form className=\"message-form\" onSubmit={this.sendMessage}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\tplaceholder=\"Type your message here...\"\r\n\t\t\t\t\tclassName=\"message-form__input\"\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tvalue={message}\r\n\t\t\t\t/>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\thtmlFor=\"upload-photo\"\r\n\t\t\t\t\t\tclassName=\"message-form__file-label\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\tid=\"upload-photo\"\r\n\t\t\t\t\t\tclassName=\"message-form__file\"\r\n\t\t\t\t\t\tonChange={this.addFile}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Tag } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport Search from \"../Search\";\r\n\r\nexport default class MessagesPanelHeader extends Component {\r\n\trender() {\r\n\t\tconst { channel, handleSearchChange, searchLoading } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"messages-panel-header\">\r\n\t\t\t\t<div className=\"row align-items-center\">\r\n\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t{channel && (\r\n\t\t\t\t\t\t\t<figure className=\"messages-panel-header__image-container\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={channel?.avatar ?? \"\"}\r\n\t\t\t\t\t\t\t\t\talt={channel?.name ?? \"user avatar\"}\r\n\t\t\t\t\t\t\t\t\tclassName=\"rounded messages-panel-header__image\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<figcaption className=\"messages-panel-header__infor\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"messages-panel-header__name\">\r\n\t\t\t\t\t\t\t\t\t\t{channel?.name || \"Unknown\"}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<Tag\r\n\t\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\t\tchannel?.status === \"online\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"red\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"messages-panel-header__status\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{channel?.status ?? \"offline\"}\r\n\t\t\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t\t</figcaption>\r\n\t\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-lg-7\">\r\n\t\t\t\t\t\t<Search handleSearchChange={handleSearchChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst isOwnMessage = (message, user) => {\r\n\t// console.log(\"message.sentBy.id\", message.sentBy.id);\r\n\t// console.log(\"user\", user.id);\r\n\r\n\treturn message?.sentBy?.id === user?.uid ? \"message__self\" : \"\";\r\n};\r\n\r\nconst isOwnImageMessage = (message, user) => {\r\n\treturn message?.sentBy?.id === user?.uid ? \"self\" : \"not-self\";\r\n};\r\n\r\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\r\n\r\nconst isImage = (message) => {\r\n\treturn message.hasOwnProperty(\"image\");\r\n};\r\n\r\nconst Message = ({ message, user }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{isImage(message) ? (\r\n\t\t\t\t<div className={`message ${isOwnMessage(message, user)}`}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={message?.image}\r\n\t\t\t\t\t\tclassName={`message__image ${isOwnImageMessage(\r\n\t\t\t\t\t\t\tmessage,\r\n\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\talt={`${message?.image}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className=\"message__time\">\r\n\t\t\t\t\t\t{timeFromNow(message.timestamp)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className={`message ${isOwnMessage(message, user)}`}>\r\n\t\t\t\t\t<figure className=\"message__user-avatar-container\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"rounded message__user-avatar\"\r\n\t\t\t\t\t\t\tsrc={message?.sentBy?.avatar}\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</figure>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>{message?.content}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<p className=\"message__time\">\r\n\t\t\t\t\t\t{timeFromNow(message.timestamp)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nexport default class MessagesPanelMain extends Component {\r\n\tstate = {\r\n\t\tshowMessages: [],\r\n\t};\r\n\r\n\tUNSAFE_componentWillReceiveProps(nextProps) {\r\n\t\tconst { messages } = nextProps;\r\n\t\tthis.setState({ showMessages: messages });\r\n\t\tthis.updateScroll();\r\n\t\t// this.displayMessage(messages);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateScroll();\r\n\t}\r\n\r\n\tupdateScroll = () => {\r\n\t\tconst container = document.querySelector(\".messages-panel-main\");\r\n\r\n\t\tif (container && container.scrollTop && container.scrollHeight)\r\n\t\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { currentUser, currentChannel, searchResults } = this.props;\r\n\t\tconst { showMessages } = this.state;\r\n\t\t// // console.log(\"searchResults\", searchResults);\r\n\t\t// console.log(\"showMessages\", showMessages);\r\n\r\n\t\tconst finalMessages =\r\n\t\t\t(searchResults?.length && searchResults) || showMessages;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"messages-panel-main\" key={Math.random()}>\r\n\t\t\t\t{finalMessages?.length > 0 &&\r\n\t\t\t\t\tfinalMessages.map((message) => (\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={message.timestamp}\r\n\t\t\t\t\t\t\tmessage={message}\r\n\t\t\t\t\t\t\tuser={currentUser}\r\n\t\t\t\t\t\t\tchannel={currentChannel}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../../firebase\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MessagesPanelHeader from \"./MessagesPanelHeader\";\r\nimport MessagesPanelMain from \"./MessagesPanelMain\";\r\n\r\nclass MessagesPanel extends Component {\r\n\tstate = {\r\n\t\tmessagesRef: firebase.database().ref(\"messages\"),\r\n\t\tuser: this.props.currentUser,\r\n\t\tmessages: [],\r\n\t\tprogressBar: false,\r\n\t\tmessagesLoading: true,\r\n\t\tnumUniqueUsers: \"\",\r\n\t\tsearchTerm: \"\",\r\n\t\tsearchLoading: false,\r\n\t\tsearchResults: [],\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { currentUser, currentChannel } = this.props;\r\n\t\tcurrentChannel && currentUser && this.addListeners(currentChannel.uid);\r\n\t}\r\n\r\n\tUNSAFE_componentWillReceiveProps(nextProps) {\r\n\t\tconst { currentUser, currentChannel } = nextProps;\r\n\t\t// console.log(\"currentChannel from nextProps\", currentChannel);\r\n\t\tcurrentChannel && currentUser && this.addListeners(currentChannel.uid);\r\n\t}\r\n\r\n\taddListeners = (channelId) => {\r\n\t\tthis.addMessageListener(channelId);\r\n\t};\r\n\r\n\taddMessageListener = (channelId) => {\r\n\t\tconst { currentUser } = this.props;\r\n\t\tconst { messagesRef } = this.state;\r\n\r\n\t\t// console.log(\"currentUser\", currentUser);\r\n\r\n\t\tlet loadedMessages = [];\r\n\t\tconst ref = messagesRef;\r\n\t\tref.child(channelId)\r\n\t\t\t.child(currentUser.uid)\r\n\t\t\t.on(\"child_added\", (snap) => {\r\n\t\t\t\tloadedMessages.push(snap.val());\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmessages: loadedMessages,\r\n\t\t\t\t\tmessagesLoading: false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleSearchChange = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tsearchTerm: event.target.value,\r\n\t\t\t\tsearchLoading: true,\r\n\t\t\t},\r\n\t\t\t() => this.handleSearchMessages()\r\n\t\t);\r\n\t};\r\n\r\n\thandleSearchMessages = () => {\r\n\t\tconst channelMessages = [...this.state.messages];\r\n\t\tconst regex = new RegExp(this.state.searchTerm, \"gi\");\r\n\t\tconst searchResults = channelMessages.reduce((acc, message) => {\r\n\t\t\tif (\r\n\t\t\t\t(message && message.content && message.content.match(regex)) ||\r\n\t\t\t\tmessage?.sentBy?.name.match(regex)\r\n\t\t\t) {\r\n\t\t\t\tacc.push(message);\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, []);\r\n\t\tthis.setState({ searchResults });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ searchLoading: false });\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tmessagesRef,\r\n\t\t\tuser,\r\n\t\t\tmessages,\r\n\t\t\tsearchResults,\r\n\t\t\tsearchTerm,\r\n\t\t\tsearchLoading,\r\n\t\t} = this.state;\r\n\r\n\t\tconst { currentChannel, currentUser } = this.props;\r\n\r\n\t\t// console.log(\"currentChannel\", currentChannel);\r\n\t\t// console.log(\"searchResults\", searchResults);\r\n\r\n\t\t// console.log(\"messages\", messages);\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"messages-panel\">\r\n\t\t\t\t<MessagesPanelHeader\r\n\t\t\t\t\tchannel={currentChannel ?? null}\r\n\t\t\t\t\thandleSearchChange={this.handleSearchChange}\r\n\t\t\t\t\tsearchLoading={searchLoading}\r\n\t\t\t\t/>\r\n\t\t\t\t<MessagesPanelMain\r\n\t\t\t\t\tmessages={messages}\r\n\t\t\t\t\tsearchResults={searchResults}\r\n\t\t\t\t\tcurrentUser={currentUser}\r\n\t\t\t\t\tcurrentChannel={currentChannel}\r\n\t\t\t\t/>\r\n\t\t\t\t<MessageForm\r\n\t\t\t\t\tmessagesRef={messagesRef}\r\n\t\t\t\t\tcurrentChannel={currentChannel}\r\n\t\t\t\t\tuser={currentUser}\r\n\t\t\t\t\tisProgressBarVisible={this.isProgressBarVisible}\r\n\t\t\t\t></MessageForm>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentChannel: state.channel.currentChannel,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesPanel);\r\n","import { Tag } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst FriendCard = ({ image, name, isOnline, userId, handleClick }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"friend-card\"\r\n\t\t\tkey={`friend-card-${userId}`}\r\n\t\t\tonClick={handleClick}\r\n\t\t>\r\n\t\t\t<figure className=\"friend-card__image-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={`friend-card__image w-100 rounded ${\r\n\t\t\t\t\t\tisOnline ? \"image-outlined\" : \"\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tsrc={image}\r\n\t\t\t\t\talt={`${name} avatar`}\r\n\t\t\t\t/>\r\n\t\t\t</figure>\r\n\r\n\t\t\t<p className=\"friend-card__name\">{name}</p>\r\n\r\n\t\t\t<Tag color={isOnline ? \"green\" : \"red\"} className=\"ml-auto\">\r\n\t\t\t\t{isOnline ? \"Online\" : \"Offline\"}\r\n\t\t\t</Tag>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FriendCard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel } from \"../../redux/actions/channel.action\";\r\nimport FriendCard from \"./FriendCard\";\r\n\r\nclass FriendsList extends Component {\r\n\tstate = {\r\n\t\tusersList: [],\r\n\t};\r\n\r\n\thandleClick = (item) => {\r\n\t\tconst { setCurrentChannel } = this.props;\r\n\t\tsetCurrentChannel(item);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { userList, setCurrentChannel, users } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"friends-list\">\r\n\t\t\t\t<header className=\"friends-list__header\">\r\n\t\t\t\t\t<h3>Friends({userList?.length ?? 0}) </h3>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t<div className=\"friends-list__main-list\">\r\n\t\t\t\t\t{userList?.length &&\r\n\t\t\t\t\t\tuserList.map((item) => {\r\n\t\t\t\t\t\t\tconst { avatar, name, status, uid } = item;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<FriendCard\r\n\t\t\t\t\t\t\t\t\timage={avatar}\r\n\t\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\t\tisOnline={status === \"online\"}\r\n\t\t\t\t\t\t\t\t\tuserId={uid}\r\n\t\t\t\t\t\t\t\t\thandleClick={() => this.handleClick(item)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tusers: state.user.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCurrentChannel })(FriendsList);\r\n","import { LogoutOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nconst UserInfor = ({ photoURL, displayName, activeToolbarItem }) => {\r\n\treturn (\r\n\t\t<section className=\"user-infor\">\r\n\t\t\t<figure className=\"user-infor__image-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"user-infor__image rounded image-outlined\"\r\n\t\t\t\t\tsrc={\r\n\t\t\t\t\t\tphotoURL ||\r\n\t\t\t\t\t\trequire(\"../../static/images/default-avatar.png\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\talt={`${displayName} avatar`}\r\n\t\t\t\t/>\r\n\t\t\t\t<figcaption className=\"user-infor__name\">\r\n\t\t\t\t\t<p>{displayName}</p>\r\n\t\t\t\t</figcaption>\r\n\t\t\t</figure>\r\n\r\n\t\t\t<div className=\"toolbar\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"toolbar-item active\"\r\n\t\t\t\t\ttoolbaritemid={1}\r\n\t\t\t\t\tonClick={(event) => activeToolbarItem(event, false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MessageOutlined />\r\n\t\t\t\t\t<span className=\"toolbar-item__text\">Chat</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"toolbar-item\"\r\n\t\t\t\t\ttoolbaritemid={3}\r\n\t\t\t\t\tonClick={(event) => activeToolbarItem(event, true)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LogoutOutlined />\r\n\t\t\t\t\t<span className=\"toolbar-item__text\">LogOut</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default UserInfor;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport UserInfor from \"./UserInfor\";\r\n\r\nclass UserPanel extends Component {\r\n\tstate = {\r\n\t\tconnectedRef: firebase.database().ref(\".info/connected\"),\r\n\t\tpresenceRef: firebase.database().ref(\"presence\"),\r\n\t\tusers: [],\r\n\t\tusersRef: firebase.database().ref(\"users\"),\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { currentUser } = this.props;\r\n\t\tif (!currentUser) this.props.history.push(\"/login\");\r\n\t\tif (currentUser) {\r\n\t\t\tthis.addListener(currentUser.uid);\r\n\t\t}\r\n\t}\r\n\r\n\taddListener = (currentUserUid) => {\r\n\t\tlet loadedUsers = [];\r\n\r\n\t\tconst { usersRef, connectedRef, presenceRef } = this.state;\r\n\t\tconst { saveUsers } = this.props;\r\n\r\n\t\tusersRef.on(\"child_added\", (snap) => {\r\n\t\t\tif (currentUserUid !== snap.key) {\r\n\t\t\t\tlet user = snap.val();\r\n\t\t\t\tuser[\"uid\"] = snap.key;\r\n\t\t\t\tuser[\"status\"] = \"offline\";\r\n\t\t\t\tloadedUsers.push(user);\r\n\t\t\t\t// console.log(\"loadedUsers\", loadedUsers);\r\n\t\t\t\tthis.setState({ users: loadedUsers });\r\n\t\t\t}\r\n\t\t});\r\n\t\tconnectedRef.on(\"value\", (snap) => {\r\n\t\t\tif (snap.val()) {\r\n\t\t\t\tconst ref = presenceRef.child(currentUserUid);\r\n\t\t\t\tref.set(true);\r\n\t\t\t\tref.onDisconnect().remove((err) => {\r\n\t\t\t\t\tif (err !== null) {\r\n\t\t\t\t\t\tconsole.log(\"err\", err);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tpresenceRef.on(\"child_added\", (snap) => {\r\n\t\t\tif (currentUserUid !== snap.key) {\r\n\t\t\t\tthis.addStatusToUser(snap.key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tpresenceRef.on(\"child_removed\", (snap) => {\r\n\t\t\tif (currentUserUid !== snap.key) {\r\n\t\t\t\tthis.addStatusToUser(snap.key, false);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\taddStatusToUser = (userId, connected = true) => {\r\n\t\tconst { users } = this.state;\r\n\t\tconst { setUsers } = this.props;\r\n\r\n\t\tconst updatedUsers = users.reduce((acc, user) => {\r\n\t\t\tif (user.uid === userId) {\r\n\t\t\t\tuser[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n\t\t\t}\r\n\t\t\treturn [...acc, user];\r\n\t\t}, []);\r\n\r\n\t\tif (typeof setUsers === \"function\") {\r\n\t\t\tsetUsers(updatedUsers);\r\n\t\t}\r\n\t};\r\n\r\n\tisUserOnline = (user) => user.status === \"online\";\r\n\r\n\tchangeChannel = (user) => {\r\n\t\tconst channelId = this.getChannelId(user.uid);\r\n\t\tconst channelData = {\r\n\t\t\tid: channelId,\r\n\t\t\tname: user.name,\r\n\t\t};\r\n\t\tthis.props.setCurrentChannel(channelData);\r\n\t\tthis.props.setPrivateChannel(true);\r\n\t\tthis.setActiveChannel(user.uid);\r\n\t};\r\n\r\n\tsetActiveChannel = (userId) => {\r\n\t\tthis.setState({ activeChannel: userId });\r\n\t};\r\n\r\n\tgetChannelId = (userId) => {\r\n\t\tconst currentUserId = this.state.user.uid;\r\n\t\treturn userId < currentUserId\r\n\t\t\t? `${userId}/${currentUserId}`\r\n\t\t\t: `${currentUserId}/${userId}`;\r\n\t};\r\n\r\n\tactiveToolbarItem = (event, isLogout) => {\r\n\t\tconst toolbarId = event?.target?.getAttribute(\"toolbaritemid\") ?? 0;\r\n\t\tconst toolbarItems = document.querySelectorAll(\".toolbar-item\");\r\n\t\ttoolbarItems.forEach((item) => {\r\n\t\t\tconst id = item?.getAttribute(\"toolbaritemid\");\r\n\t\t\tif (id === toolbarId) {\r\n\t\t\t\titem.classList.add(\"active\");\r\n\t\t\t} else {\r\n\t\t\t\titem.classList.remove(\"active\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isLogout) {\r\n\t\t\tthis.handleSignOut();\r\n\t\t}\r\n\t};\r\n\r\n\thandleSignOut = () =>\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signOut()\r\n\t\t\t.then(() => console.log(\"Signed out!\"));\r\n\r\n\trender() {\r\n\t\tconst { currentUser, history, otherUsers } = this.props;\r\n\t\tconst { allUsers, users } = this.state;\r\n\r\n\t\t// console.log(\"users\", users);\r\n\r\n\t\t// console.log(\"otherUsers\", otherUsers);\r\n\t\t// console.log(\"allUsers\", allUsers);\r\n\r\n\t\tif (!currentUser) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t} else {\r\n\t\t\tconst { displayName, photoURL } = currentUser;\r\n\r\n\t\t\t// console.log(\"currentUser\", currentUser);\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<UserInfor\r\n\t\t\t\t\t\tphotoURL={photoURL}\r\n\t\t\t\t\t\tdisplayName={displayName}\r\n\t\t\t\t\t\tactiveToolbarItem={this.activeToolbarItem}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FriendsList userList={users} key={Math.random()} />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcurrentUser: state.user.currentUser,\r\n\tusers: state.user.users,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(UserPanel));\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MessagesListPanel from \"./components/MessagesListPanel/MessagesListPanel\";\nimport MessagesPanel from \"./components/MessagesPanel/MessagesPanel\";\nimport UserPanel from \"./components/UserPanel/UserPanel\";\nimport firebase from \"./firebase\";\nimport { saveUsers } from \"./redux/actions/user.action\";\n\nclass App extends Component {\n\tstate = {\n\t\tusersRef: firebase.database().ref(\"users\"),\n\t\tconnectedRef: firebase.database().ref(\".info/connected\"),\n\t\tpresenceRef: firebase.database().ref(\"presence\"),\n\t\tusers: [],\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { currentUser } = this.props;\n\t\tif (currentUser) {\n\t\t\tthis.addListener(currentUser.uid);\n\t\t}\n\t}\n\n\taddListener = (currentUserUid) => {\n\t\tlet loadedUsers = [];\n\n\t\tconst { usersRef, connectedRef, presenceRef } = this.state;\n\t\tconst { saveUsers } = this.props;\n\n\t\tusersRef.on(\"child_added\", (snap) => {\n\t\t\tif (currentUserUid !== snap.key) {\n\t\t\t\tlet user = snap.val();\n\t\t\t\tuser[\"uid\"] = snap.key;\n\t\t\t\tuser[\"status\"] = \"offline\";\n\t\t\t\tloadedUsers.push(user);\n\t\t\t\t// console.log(\"loadedUsers\", loadedUsers);\n\t\t\t\tthis.setState({ users: loadedUsers });\n\t\t\t\tsaveUsers(loadedUsers);\n\t\t\t}\n\t\t});\n\t\tconnectedRef.on(\"value\", (snap) => {\n\t\t\tif (snap.val()) {\n\t\t\t\tconst ref = presenceRef.child(currentUserUid);\n\t\t\t\tref.set(true);\n\t\t\t\tref.onDisconnect().remove((err) => {\n\t\t\t\t\tif (err !== null) {\n\t\t\t\t\t\tconsole.log(\"err\", err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tpresenceRef.on(\"child_added\", (snap) => {\n\t\t\tif (currentUserUid !== snap.key) {\n\t\t\t\tthis.addStatusToUser(snap.key);\n\t\t\t}\n\t\t});\n\n\t\tpresenceRef.on(\"child_removed\", (snap) => {\n\t\t\tif (currentUserUid !== snap.key) {\n\t\t\t\tthis.addStatusToUser(snap.key, false);\n\t\t\t}\n\t\t});\n\t};\n\n\taddStatusToUser = (userId, connected = true) => {\n\t\tconst { users } = this.state;\n\t\tconst { setUsers } = this.props;\n\n\t\tconst updatedUsers = users.reduce((acc, user) => {\n\t\t\tif (user.uid === userId) {\n\t\t\t\tuser[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n\t\t\t}\n\t\t\treturn [...acc, user];\n\t\t}, []);\n\n\t\tif (typeof setUsers === \"function\") {\n\t\t\tsetUsers(updatedUsers);\n\t\t}\n\t};\n\n\tisUserOnline = (user) => user.status === \"online\";\n\n\tchangeChannel = (user) => {\n\t\tconst channelId = this.getChannelId(user.uid);\n\t\tconst channelData = {\n\t\t\tid: channelId,\n\t\t\tname: user.name,\n\t\t};\n\t\tthis.props.setCurrentChannel(channelData);\n\t\tthis.props.setPrivateChannel(true);\n\t\tthis.setActiveChannel(user.uid);\n\t};\n\n\tsetActiveChannel = (userId) => {\n\t\tthis.setState({ activeChannel: userId });\n\t};\n\n\tgetChannelId = (userId) => {\n\t\tconst currentUserId = this.state.user.uid;\n\t\treturn userId < currentUserId\n\t\t\t? `${userId}/${currentUserId}`\n\t\t\t: `${currentUserId}/${userId}`;\n\t};\n\n\trender() {\n\t\tconst { currentUser, currentChannel } = this.props;\n\t\tconst { users } = this.state;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"row app\">\n\t\t\t\t\t<div className=\"col-lg-3\">\n\t\t\t\t\t\t<UserPanel\n\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\totherUsers={users}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"col-lg-3\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderLeft: \"1px solid #e6e6e6\",\n\t\t\t\t\t\t\tborderRight: \"1px solid #e6e6e6\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MessagesListPanel\n\t\t\t\t\t\t\tuser={currentUser}\n\t\t\t\t\t\t\totherUsers={users}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t<MessagesPanel\n\t\t\t\t\t\t\tcurrentChannel={currentChannel}\n\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tcurrentUser: state.user.currentUser,\n\tcurrentChannel: state.channel.currentChannel,\n\tisPrivateChannel: state.channel.isPrivateChannel,\n});\n\nexport default connect(mapStateToProps, { saveUsers })(App);\n","import * as actionTypes from \"../types/index.types\";\r\n\r\nexport const setUser = (user) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SET_USER,\r\n\t\tpayload: {\r\n\t\t\tcurrentUser: user,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const clearUser = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.CLEAR_USER,\r\n\t};\r\n};\r\n\r\nexport const saveUsers = (users) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SAVE_USERS,\r\n\t\tpayload: {\r\n\t\t\tusers,\r\n\t\t},\r\n\t};\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n\t<div className=\"group\">\r\n\t\t<input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n\t\t{label ? (\r\n\t\t\t<label\r\n\t\t\t\tclassName={`${\r\n\t\t\t\t\totherProps.value.length ? \"shrink\" : \"\"\r\n\t\t\t\t} form-input-label`}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t) : null}\r\n\t</div>\r\n);\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\n\r\nconst SubmitButton = ({ children, ...otherProps }) => (\r\n\t<button className=\"button--1\" {...otherProps}>\r\n\t\t{children}\r\n\t</button>\r\n);\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div className=\"ripple-loader\">\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Mask = () => {\r\n\treturn (\r\n\t\t<div className=\"mask\">\r\n\t\t\t<Loader />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Mask;\r\n","import { message } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport FormInput from \"../Form/FormInput\";\r\nimport SubmitButton from \"../Form/SubmitButton\";\r\nimport Mask from \"../Mask/Mask\";\r\n\r\nexport default class login extends Component {\r\n\tstate = {\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t\tuserRef: firebase.database().ref(\"users\"),\r\n\t};\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { email, password } = this.state;\r\n\r\n\t\tthis.setState({ loading: true });\r\n\r\n\t\ttry {\r\n\t\t\tconst signedUser = await firebase\r\n\t\t\t\t.auth()\r\n\t\t\t\t.signInWithEmailAndPassword(email, password);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t} catch (err) {\r\n\t\t\tthis.failedAlert(err.message);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tsuccessAlert = () => message.success(\"User created successfully\");\r\n\r\n\tfailedAlert = (err) => message.error(err);\r\n\r\n\trender() {\r\n\t\tconst { email, password, loading } = this.state;\r\n\r\n\t\t// console.log(\"loading\", loading);\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<section className=\"login\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row form__main\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-6 login__form-container\">\r\n\t\t\t\t\t\t\t\t<div className=\"form__heading\">Login</div>\r\n\r\n\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\t\t\tclassName=\"login__form\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<SubmitButton\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t</SubmitButton>\r\n\r\n\t\t\t\t\t\t\t\t\t<span className=\"form__add-info\">\r\n\t\t\t\t\t\t\t\t\t\tDon't have an account ?{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/register\">Register</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-6 form__image-container\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={require(\"../../static/images/register.jpg\")}\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 login__image \"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{loading ? <Mask /> : null}\r\n\t\t\t\t</section>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import { message } from \"antd\";\r\nimport md5 from \"md5\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport FormInput from \"../Form/FormInput\";\r\nimport SubmitButton from \"../Form/SubmitButton\";\r\nimport Mask from \"../Mask/Mask\";\r\n\r\nexport default class Register extends Component {\r\n\tstate = {\r\n\t\tusername: \"\",\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tpasswordConfirm: \"\",\r\n\t\tloading: false,\r\n\t\tuserRef: firebase.database().ref(\"users\"),\r\n\t};\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tisPasswordValid = ({ password, passwordConfirm }) =>\r\n\t\tpassword === passwordConfirm;\r\n\r\n\thandleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (this.isPasswordValid(this.state)) {\r\n\t\t\tconst { email, password, username } = this.state;\r\n\r\n\t\t\tthis.setState({ loading: true });\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst createdUser = await firebase\r\n\t\t\t\t\t.auth()\r\n\t\t\t\t\t.createUserWithEmailAndPassword(email, password);\r\n\r\n\t\t\t\tawait createdUser.user.updateProfile({\r\n\t\t\t\t\tdisplayName: username,\r\n\t\t\t\t\tphotoURL: `https://gravatar.com/avatar/${md5(\r\n\t\t\t\t\t\tcreatedUser.user.email\r\n\t\t\t\t\t)}?d=identical`,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait this.saveUser(createdUser);\r\n\t\t\t\tthis.successAlert();\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(\"err\", err);\r\n\t\t\t\tthis.failedAlert(err.message);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tsuccessAlert = () => message.success(\"User created successfully\");\r\n\r\n\tfailedAlert = (err) => message.error(err);\r\n\r\n\tsaveUser = (createdUser) => {\r\n\t\tconst { userRef } = this.state;\r\n\t\treturn userRef.child(createdUser.user.uid).set({\r\n\t\t\tname: createdUser.user.displayName,\r\n\t\t\tavatar: createdUser.user.photoURL,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tusername,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tpasswordConfirm,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<section className=\"register\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row form__main\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-6 register__form-container\">\r\n\t\t\t\t\t\t\t\t<div className=\"form__heading\">\r\n\t\t\t\t\t\t\t\t\tRegister Now!\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\t\t\tclassName=\"register__form\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t\t\tname=\"passwordConfirm\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<SubmitButton\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tRegister Now!\r\n\t\t\t\t\t\t\t\t\t</SubmitButton>\r\n\r\n\t\t\t\t\t\t\t\t\t<span className=\"form__add-info\">\r\n\t\t\t\t\t\t\t\t\t\tDo you have an account ?{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-6 form__image-container\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={require(\"../../static/images/register.jpg\")}\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 register__image \"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{loading ? <Mask /> : null}\r\n\t\t\t\t</section>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as actionTypes from \"../types/index.types\";\r\n\r\nconst INITIAL_STATE = {\r\n\tcurrentChannel: null,\r\n\tisPrivateChannel: false,\r\n};\r\n\r\nconst channelReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_CURRENT_CHANNEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentChannel: action.payload.currentChannel,\r\n\t\t\t};\r\n\t\tcase actionTypes.SET_PRIVATE_CHANNEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPrivateChannel: action.payload.isPrivateChannel,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default channelReducer;\r\n","import * as actionTypes from \"../types/index.types\";\r\n\r\nconst INITIAL_STATE = {\r\n\tusers: [],\r\n\tcurrentUser: null,\r\n\tisLoading: true,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: action.payload.currentUser,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t};\r\n\t\tcase actionTypes.CLEAR_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: null,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t};\r\n\t\tcase actionTypes.SAVE_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.payload.users,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport channelReducer from \"./channel.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tuser: userReducer,\r\n\tchannel: channelReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport {\n\tBrowserRouter,\n\tRedirect,\n\tRoute,\n\tSwitch,\n\twithRouter,\n} from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Mask from \"./components/Mask/Mask\";\nimport firebase from \"./firebase\";\nimport \"./index.css\";\nimport { clearUser, setUser } from \"./redux/actions/user.action\";\nimport rootReducer from \"./redux/reducers/index.reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./static/css/main.min.css\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends Component {\n\tcomponentDidMount() {\n\t\tconst { setUser, clearUser } = this.props;\n\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\t// console.log(\"user\", user);\n\n\t\t\tif (user) {\n\t\t\t\tsetUser(user);\n\t\t\t\tthis.props.history.push(\"/\");\n\t\t\t} else {\n\t\t\t\t// console.log(\"Go here\");\n\t\t\t\tclearUser();\n\t\t\t\tthis.goToLogin();\n\t\t\t\tthis.props.history.push(\"/login\");\n\t\t\t}\n\t\t});\n\t}\n\n\tgoToLogin = () => <Redirect to=\"/login\" />;\n\n\trender() {\n\t\tconst { isLoading } = this.props;\n\n\t\treturn isLoading ? (\n\t\t\t<Mask />\n\t\t) : (\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={App} {...this.props}></Route>\n\t\t\t\t<Route exact path=\"/register\" component={Register}></Route>\n\t\t\t\t<Route exact path=\"/login\" component={Login}></Route>\n\t\t\t</Switch>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tisLoading: state.user.isLoading,\n});\n\nconst RootWithAuth = withRouter(\n\tconnect(mapStateToProps, { setUser, clearUser })(Root)\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<RootWithAuth />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default-avatar.5097b024.png\";"],"sourceRoot":""}